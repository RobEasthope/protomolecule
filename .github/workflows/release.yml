name: Continuous Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: 🚀 Continuous Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
      issues: read
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Monorepo
        uses: ./.github/actions/setup-monorepo

      - name: 🏗️ Build packages
        run: pnpm build

      - name: 📋 Check for changesets
        id: changesets-check
        run: |
          if ls .changeset/*.md 1> /dev/null 2>&1; then
            echo "has_changesets=true" >> $GITHUB_OUTPUT
            echo "Found changeset files to process"
          else
            echo "has_changesets=false" >> $GITHUB_OUTPUT
            echo "No changeset files found"
          fi

      - name: 🔄 Process changesets and version
        if: steps.changesets-check.outputs.has_changesets == 'true'
        run: |
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Version packages based on changesets
          pnpm changeset version

          # Commit version bumps
          git add -A
          git commit -m "chore: version packages [skip ci]" || echo "No changes to commit"

      - name: 🚀 Publish to NPM
        if: steps.changesets-check.outputs.has_changesets == 'true'
        id: publish
        run: |
          # Publish packages
          pnpm changeset publish > publish-output.txt 2>&1

          # Extract published packages info
          if grep -q "Publishing" publish-output.txt; then
            echo "published=true" >> $GITHUB_OUTPUT
            cat publish-output.txt
          else
            echo "published=false" >> $GITHUB_OUTPUT
            echo "No packages were published"
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          HUSKY: 0

      - name: 📝 Push version commits
        if: steps.changesets-check.outputs.has_changesets == 'true'
        run: |
          git push origin main

      - name: 🏷️ Create GitHub Release
        if: steps.publish.outputs.published == 'true'
        run: |
          # Get the latest version from the most recently updated package
          VERSION=$(node -p "
            const fs = require('fs');
            const packages = [
              'packages/eslint-config/package.json',
              'packages/tsconfig/package.json'
            ];
            const versions = packages
              .filter(p => fs.existsSync(p))
              .map(p => JSON.parse(fs.readFileSync(p, 'utf8')))
              .filter(p => !p.private)
              .map(p => p.version);
            versions[0] || '0.0.0';
          ")

          # Create release
          gh release create "v$VERSION" \
            --title "v$VERSION" \
            --notes "Automated release from continuous deployment" \
            --target main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Generate Summary
        if: always()
        run: |
          echo "## 🚀 Continuous Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.changesets-check.outputs.has_changesets }}" == "true" ]; then
            echo "✅ Changesets processed and packages published" >> $GITHUB_STEP_SUMMARY
            
            if [ -f publish-output.txt ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### Published Packages" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              cat publish-output.txt >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "ℹ️ No changesets found - no release needed" >> $GITHUB_STEP_SUMMARY
          fi
